#LOG
LOG_FILE_NAME=transforms.log
LOG_FILE_LEVEL=INFO
LOG_FILE_CONVERSION_PATTERN=[%d{dd/MM/yyyy HH:mm:ss}] %p (%F:%L) - %m%n
LOG_FILE_BACKUP_PATTERN='.'yyyyMMdd
PATH_LOG_FILE=log/


delimiter = ;
#link API
#UAT ENdpoint as VIT
#linkAPI = https://10.132.130.42:8888/online-endpoints/1.0.0/acmTransactionUpdate

#vit Endpoint as VIT
linkAPI = https://10.132.130.16:8888/online-endpoints/1.0.0/acmTransactionUpdate

#linkAPI = https://10.132.138.17:8889/online-endpoints/1.0.0/acmTransactionUpdate
linkAPIStaging = https://10.132.138.17:8888/online-endpoints/1.0.0/acmTransactionUpdate
#linkAPI = localhost:8080/
requestMethod = POST
#get row_data in source_data
retrieveRowData = SELECT RAW_DATA FROM source_data WHERE SOURCE = '$source' AND SOURCE_DATE = '$date' ;
retrieveRowDataPerDataKey = SELECT RAW_DATA FROM source_data WHERE data_key IN ($data_key);

#deleted
deleteRowData = DELETE FROM rt_historic.source_data WHERE SOURCE = '$source' AND SOURCE_DATE = '$date';
deleteRowDataPerDataKey = DELETE FROM rt_historic.source_data  WHERE data_key IN ($data_key);

#delete All Data RT Clearing
deleteAllRT = DELETE FROM rt_clearing.$tableName;

#deleteCounter invoice =
deleteCounter_invoice  =DELETE FROM rt_system.renaissance_property WHERE category = 'TIERED_FEE_PERSISTANT_COUNT';

#filter source 1 which has reason_uncompressed >0
source_one_select = SELECT COUNT(*) as totalData FROM rt_historic.source_data WHERE SOURCE =1  AND reason_unprocessed NOT IN (0,1,3) AND data_identifier NOT IN (12) ;

#Push Source 1 to RT_Clearing
push_source_one = UPDATE rt_historic.source_data SET reason_unprocessed = 2 WHERE SOURCE = 1 AND source_date IN ($date,$prev_date,$next_date) AND data_identifier NOT IN (12);

#backup Source 2000 SourceDatat
select_source_2000_backup = SELECT * FROM rt_historic.source_data WHERE SOURCE =2000 AND source_date IN ($date,$prev_date,$next_date) ;


#update Process_control_date
update_process_control= UPDATE rt_system.process_control SET processing_date = "$date", previous_processing_date = "$prevDate" WHERE process_name IN ("ATM","JALIN_FEE","RECON");


#telegram
TOKEN = 7370864657:AAF0FQfVBrg2t5oXLvlz0UlCpcdMfRrr-zQ
chat_id = -4276025184


#elastic
url_elastic = 10.132.133.5:9200
route_ej_elastic_vit = ren-mde_ej_vit
route_ej_elastic_staging = ren-mde_ej

route_recon_elastic_vit = ren-mde_recon_vit
route_recon_elastic_staging = ren-mde_recon















#opening-closing for request XML
openingRequestChecker = <x:Transactions>
openingRequest = <s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:x="http://tempuri.org/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><s:Header xmlns:wsa="http://www.w3.org/2005/08/addressing"><wsa:Action>http://tempuri.org/IEdiServiceOnlineEFTS2/SendAtmTransactionsStatus</wsa:Action></s:Header><s:Body><x:SendAtmTransactionsStatus>
closingRequest = </x:Transactions></x:SendAtmTransactionsStatus></s:Body></s:Envelope>
